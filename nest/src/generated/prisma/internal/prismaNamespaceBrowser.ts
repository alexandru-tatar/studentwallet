
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"
export type * from '../models.js'
export type * from './prismaNamespace.js'
export const Decimal = runtime.Decimal
export const ModelName = {
  Abbildung: 'Abbildung',
  Buch: 'Buch',
  BuchFile: 'BuchFile',
  Titel: 'Titel'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/**
 * Enums
 */
export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const AbbildungScalarFieldEnum = {
  id: 'id',
  beschriftung: 'beschriftung',
  contentType: 'contentType',
  buchId: 'buchId'
} as const

export type AbbildungScalarFieldEnum = (typeof AbbildungScalarFieldEnum)[keyof typeof AbbildungScalarFieldEnum]


export const RelationLoadStrategy = {
  query: 'query',
  join: 'join'
} as const

export type RelationLoadStrategy = (typeof RelationLoadStrategy)[keyof typeof RelationLoadStrategy]


export const BuchScalarFieldEnum = {
  id: 'id',
  version: 'version',
  isbn: 'isbn',
  rating: 'rating',
  art: 'art',
  preis: 'preis',
  rabatt: 'rabatt',
  lieferbar: 'lieferbar',
  datum: 'datum',
  homepage: 'homepage',
  schlagwoerter: 'schlagwoerter',
  erzeugt: 'erzeugt',
  aktualisiert: 'aktualisiert'
} as const

export type BuchScalarFieldEnum = (typeof BuchScalarFieldEnum)[keyof typeof BuchScalarFieldEnum]


export const BuchFileScalarFieldEnum = {
  id: 'id',
  data: 'data',
  filename: 'filename',
  mimetype: 'mimetype',
  buchId: 'buchId'
} as const

export type BuchFileScalarFieldEnum = (typeof BuchFileScalarFieldEnum)[keyof typeof BuchFileScalarFieldEnum]


export const TitelScalarFieldEnum = {
  id: 'id',
  titel: 'titel',
  untertitel: 'untertitel',
  buchId: 'buchId'
} as const

export type TitelScalarFieldEnum = (typeof TitelScalarFieldEnum)[keyof typeof TitelScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

